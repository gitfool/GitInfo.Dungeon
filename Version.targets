<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <PropertyGroup>
        <GitCommitDateUtcVersion Condition="'$(GitCommitDateUtcVersion)' == ''">true</GitCommitDateUtcVersion>
        <GitInfoReportImportance Condition="'$(GitInfoReportImportance)' == ''">low</GitInfoReportImportance>
        <GitVersion>true</GitVersion>
    </PropertyGroup>

    <Target Name="_GitBaseVersionCommitDate" Returns="$(GitBaseVersion)"
        AfterTargets="GitInfo"
        Condition="'$(GitBaseVersion)' == '' And '$(GitIgnoreCommitDateVersion)' != 'true'">

        <Warning Text="GitCommitDate is not defined."
            Code="GI008"
            Condition="'$(GitCommitDate)' == ''" />

        <CommitDateToVersion CommitDate="$(GitCommitDate)" AdjustToUtc="$(GitCommitDateUtcVersion)">
            <Output TaskParameter="Version" PropertyName="GitBaseVersion" />
            <Output TaskParameter="VersionSource" PropertyName="GitBaseVersionSource" />
            <Output TaskParameter="SemVerSource" PropertyName="GitSemVerSource" />
        </CommitDateToVersion>

        <Exec Command="$(GitExe) rev-list --count --first-parent $(GitDefaultBranch)..HEAD"
            EchoOff="true"
            StandardErrorImportance="low"
            StandardOutputImportance="low"
            ConsoleToMSBuild="true"
            WorkingDirectory="$(GitRoot)"
            ContinueOnError="true"
            StdOutEncoding="utf-8">
            <Output TaskParameter="ConsoleOutput" PropertyName="GitCommits" />
            <Output TaskParameter="ExitCode" PropertyName="MSBuildLastExitCode" />
        </Exec>

        <PropertyGroup Condition="'$(MSBuildLastExitCode)' != '0'">
            <GitCommits>0</GitCommits>
        </PropertyGroup>

        <PropertyGroup Condition="'$(GitBranch)' != '$(GitDefaultBranch)'">
            <_Branch>$([System.Text.RegularExpressions.Regex]::Replace($(GitBranch.ToLowerInvariant()), "[^0-9a-z-]", "-").Trim('-'))</_Branch>
            <GitBaseVersion>$(GitBaseVersion)-branch.$(_Branch).$(GitCommits)</GitBaseVersion>
        </PropertyGroup>

    </Target>

    <Target Name="_GitSetVersion"
        AfterTargets="GitSetVersion">

        <PropertyGroup>
            <Version>$(GitBaseVersion)</Version>
            <AssemblyVersion>$(GitBaseVersionMajor).0.0.0</AssemblyVersion>
            <FileVersion>$(GitBaseVersionMajor).$(GitBaseVersionMinor).$(GitBaseVersionPatch).0</FileVersion>
            <InformationalVersion>$(Version)+sha.$(GitSha)</InformationalVersion>
            <PackageVersion>$(Version)</PackageVersion>
        </PropertyGroup>

    </Target>

    <Target Name="_SleepBeforeReadCache"
        BeforeTargets="_GitReadCache"
        Condition="'$(MSBuildProjectFile)' != 'Tests.csproj'">

        <Sleep Project="$(MSBuildProjectFile)" Timeout="2000" />

    </Target>

    <Target Name="_SleepAfterReadCache"
        AfterTargets="_GitReadCache"
        Condition="'$(MSBuildProjectFile)' == 'Tests.csproj'">

        <Sleep Project="$(MSBuildProjectFile)" Timeout="4000" />

    </Target>

    <UsingTask TaskName="CommitDateToVersion" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >
        <ParameterGroup>
            <CommitDate ParameterType="System.String" Required="true" />
            <AdjustToUtc ParameterType="System.Boolean" Required="true" />
            <Version ParameterType="System.String" Output="true" />
            <VersionSource ParameterType="System.String" Output="true" />
            <SemVerSource ParameterType="System.String" Output="true" />
        </ParameterGroup>
        <Task>
            <Using Namespace="System.Globalization" />
            <Code Type="Fragment" Language="cs">
                <![CDATA[
                var dto = DateTimeOffset.Parse(CommitDate, null, AdjustToUtc ? DateTimeStyles.AdjustToUniversal : DateTimeStyles.None);
                var utc = AdjustToUtc ? "Utc" : string.Empty;
                Version = $"{dto:yyyy.Mdd}.{100 * dto.Hour + dto.Minute}";
                VersionSource = $"GitCommitDate{utc}";
                SemVerSource = $"CommitDate{utc}";
                ]]>
            </Code>
        </Task>
    </UsingTask>

    <UsingTask TaskName="Sleep" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >
        <ParameterGroup>
            <Project ParameterType="System.String" Required="true" />
            <Timeout ParameterType="System.Int32" Required="true" />
        </ParameterGroup>
        <Task>
            <Using Namespace="System.Threading" />
            <Code Type="Fragment" Language="cs">
                Log.LogMessage(MessageImportance.High, $"Sleeping {Project} for {Timeout}ms...");
                Thread.Sleep(Timeout);
            </Code>
        </Task>
    </UsingTask>

</Project>
